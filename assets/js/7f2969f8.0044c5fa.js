"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[2770],{196:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"my-tutorials/mcut-tutorials/week-3/3-6","title":"3-6 Performing Stream Tests on RZ/G2L","description":"In this tutorial, we will perform streaming tests on RZ/G2L with hardware-specific encoder/decoder adjustments. Then we will try to stream videos from RZ/G2L to PC using GStreamer commands.","source":"@site/docs/my-tutorials/mcut-tutorials/week-3/3-6.md","sourceDirName":"my-tutorials/mcut-tutorials/week-3","slug":"/my-tutorials/mcut-tutorials/week-3/3-6","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-3/3-6","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-tutorials/mcut-tutorials/week-3/3-6.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"3-5 Editing Recipes and Recompiling Yocto Project","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-3/3-5"},"next":{"title":"3-7 Extra Materials","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-3/3-7"}}');var s=n(4848),i=n(8453);const o={sidebar_position:6},a="3-6 Performing Stream Tests on RZ/G2L",c={},l=[{value:"Basic Test",id:"basic-test",level:2},{value:"Streaming Test",id:"streaming-test",level:2},{value:"Local Streaming Test",id:"local-streaming-test",level:3}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"3-6-performing-stream-tests-on-rzg2l",children:"3-6 Performing Stream Tests on RZ/G2L"})}),"\n",(0,s.jsx)(t.p,{children:"In this tutorial, we will perform streaming tests on RZ/G2L with hardware-specific encoder/decoder adjustments. Then we will try to stream videos from RZ/G2L to PC using GStreamer commands."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"basic-test",children:"Basic Test"}),"\n",(0,s.jsx)(t.p,{children:"First, we can perform a basic test using a video test source. On the terminal of RZ/G2L (or serial monitor), run the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! autovideosink\n"})}),"\n",(0,s.jsx)(t.p,{children:"Then, ensure the equirectangular filter is working properly by running:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(t.p,{children:"The output should look like below:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"equirect",src:n(9580).A+"",width:"1407",height:"807"})}),"\n",(0,s.jsx)(t.h2,{id:"streaming-test",children:"Streaming Test"}),"\n",(0,s.jsx)(t.p,{children:"Now, we will stream from RZ/G2L to mini PC. On the terminal of Ubuntu 22.04, run the following command to wait for h.264 stream from RZ/G2L:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 udpsrc port=5000 ! application/x-rtp,media=video,clock-rate=90000,encoding-name=H264,payload=96 ! rtph264depay ! avdec_h264 ! autovideosink\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run the 3 scripts below, each with different sets of plugins:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="run1.sh"',children:"gst-launch-1.0 -e filesrc location=./endo01.mp4 ! qtdemux ! queue ! h264parse ! video/x-h264, stream-format=avc,alignment=au ! rtph264pay pt=96 name=pay0 config-interval=3 mtu=6000 ! udpsink host=your-ip-address port=5000\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="run2.sh"',children:"gst-launch-1.0 -e filesrc location=./endo01.mp4 ! qtdemux ! queue ! h264parse ! omxh264dec ! omxh264enc ! rtph264pay config-interval=10 ! udpsink host=your-ip-address port=5000\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="run3.sh"',children:"h264parse ! omxh264dec ! videoconvert ! equirectangular ! videoconvert ! omxh264enc ! rtph264pay config-interval=10 ! udpsink host=your-ip-address port=5000\n"})}),"\n",(0,s.jsx)(t.p,{children:"Note how different plugins may have an impact to the performance of the video streaming(eg. latency, frame rates, resolution)."}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"Remember to change the IP address to the assigned IP on your RZ/G2L board!"})}),"\n",(0,s.jsx)(t.h3,{id:"local-streaming-test",children:"Local Streaming Test"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="run4.sh"',children:"gst-launch-1.0 -e filesrc location=./endo01.mp4 ! qtdemux ! queue ! h264parse ! omxh264dec ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"Since the execution speed is slow, some frames could be dropped during the playback. A longer mp4 test file is recommended as it would be better for demonstration purposes."})}),"\n",(0,s.jsx)(t.hr,{})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9580:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/3-6-0-7c20ba3490ea2670010bf922027064d0.png"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);