"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[8990],{7012:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"my-tutorials/other-tutorials/1-1","title":"1\ufe0f\u20e3 Git Commit Best Practices","description":"A good Git commit is essential for collaboration with other developers, tracking changes and documenting the changes made in a project. Here are the best practices for writing an effective commit message.","source":"@site/docs/my-tutorials/other-tutorials/1-1.md","sourceDirName":"my-tutorials/other-tutorials","slug":"/my-tutorials/other-tutorials/1-1","permalink":"/tianhom/docs/my-tutorials/other-tutorials/1-1","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-tutorials/other-tutorials/1-1.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Other Tutorials","permalink":"/tianhom/docs/category/other-tutorials"},"next":{"title":"2\ufe0f\u20e3 Adding a New Navbar Item in Docusaurus","permalink":"/tianhom/docs/my-tutorials/other-tutorials/1-2"}}');var s=n(4848),o=n(8453);const r={sidebar_position:1},a="1\ufe0f\u20e3 Git Commit Best Practices",c={},d=[{value:"Structuring Commit Messages",id:"structuring-commit-messages",level:2},{value:"Consistent Formatting",id:"consistent-formatting",level:2},{value:"Example of a Good Commit Message",id:"example-of-a-good-commit-message",level:2}];function l(e){const t={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"1\ufe0f\u20e3-git-commit-best-practices",children:"1\ufe0f\u20e3 Git Commit Best Practices"})}),"\n",(0,s.jsx)(t.p,{children:"A good Git commit is essential for collaboration with other developers, tracking changes and documenting the changes made in a project. Here are the best practices for writing an effective commit message."}),"\n",(0,s.jsx)(t.h2,{id:"structuring-commit-messages",children:"Structuring Commit Messages"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Subject"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A short summary of the changes made (10 characters or less)"}),"\n",(0,s.jsxs)(t.li,{children:['Written in imperative mood, e.g. "',(0,s.jsx)(t.em,{children:"Add new Markdown docs"}),'" instead of "',(0,s.jsx)(t.em,{children:"Added new Markdown docs"}),'"']}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Body (Optional)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A more detailed explanation of the change"}),"\n",(0,s.jsx)(t.li,{children:"Explain why the change was necessary and how it solves the problem"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Footer (Optional)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Metadata such as issue references, breaking changes, etc"}),"\n",(0,s.jsxs)(t.li,{children:["Example: ",(0,s.jsx)(t.code,{children:"Closes #123"}),", ",(0,s.jsx)(t.code,{children:"BREAKING CHANGE: Update API signature"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"A commit should address one logical change or purpose."}),"\n",(0,s.jsx)(t.p,{children:"You should also avoid bundling unrelated changes in one commit."}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Make messages easy to understand for both current and future contributors and avoid vague phrases like ",(0,s.jsx)(t.em,{children:'"fix bugs"'})," or ",(0,s.jsx)(t.em,{children:'"update files"'}),". Instead, ",(0,s.jsx)(t.em,{children:'"Fix null pointer exception in user authentication"'}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"consistent-formatting",children:"Consistent Formatting"}),"\n",(0,s.jsx)(t.p,{children:"Examples of subject prefixes for clarity:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"feat"}),": for new features (e.g. ",(0,s.jsx)(t.code,{children:"feat: Add user login support"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"fix"}),": for bug fixes (e.g. ",(0,s.jsx)(t.code,{children:"fix: Correct typo in README"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"docs"}),": for documentation updates"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"style"}),": for formatting/code style (e.g. spaces, indentation)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"refactor"}),": for code restructuring without functionality changes"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"test"}),": for adding/modifying tests"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Include a ticket number or issue reference when applicable."}),"\n",(0,s.jsxs)(t.p,{children:["Example: ",(0,s.jsx)(t.code,{children:"fix: Resolve crash when loading profile (#45)"})]}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"Ensure the changes are tested thoroughly and works as intended before commiting!"})}),"\n",(0,s.jsx)(t.h2,{id:"example-of-a-good-commit-message",children:"Example of a Good Commit Message"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"feat: Add user authentication to the API\n\nAdd JWT-based user authentication to secure the API. \nThis implementation includes:\n- User login endpoint\n- Middleware for token verification\n- Token refresh functionality\n\nCloses #234\n"})}),"\n",(0,s.jsx)(t.p,{children:"By following these practices, you ensure that your commit history is meaningful and maintains high-quality documentation for the project."}),"\n",(0,s.jsx)(t.hr,{})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);