"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[6633],{3958:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>t});const a=JSON.parse('{"id":"my-tutorials/mcut-tutorials/week-6/6-2","title":"6-2 Cross Compilation of OpenCV","description":"This document outlines the steps to cross-compile OpenCV applications for ARM-based Renesas platforms using a Yocto SDK, including both C++ and Python implementations.","source":"@site/docs/my-tutorials/mcut-tutorials/week-6/6-2.md","sourceDirName":"my-tutorials/mcut-tutorials/week-6","slug":"/my-tutorials/mcut-tutorials/week-6/6-2","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-6/6-2","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-tutorials/mcut-tutorials/week-6/6-2.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"6-1 Installation of OpenCV","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-6/6-1"},"next":{"title":"6-3 Camera Control Using Video4Linux","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-6/6-3"}}');var s=i(4848),r=i(8453);const l={sidebar_position:2},o="6-2 Cross Compilation of OpenCV",c={},t=[{value:"Environment Setup for Renesas Cross Compilation",id:"environment-setup-for-renesas-cross-compilation",level:2},{value:"Cross-Compiling OpenCV for ARM-Based Linux Systems",id:"cross-compiling-opencv-for-arm-based-linux-systems",level:2},{value:"OpenCV C++ Example Program and CMake Build",id:"opencv-c-example-program-and-cmake-build",level:2},{value:"Example Program: <code>DisplayImage.cpp</code>",id:"example-program-displayimagecpp",level:3},{value:"CMake Configuration: <code>CMakeLists.txt</code>",id:"cmake-configuration-cmakeliststxt",level:3},{value:"Sample Image",id:"sample-image",level:3},{value:"Building and Verifying Locally (x86_64)",id:"building-and-verifying-locally-x86_64",level:3},{value:"Cross-Compiling for aarch64",id:"cross-compiling-for-aarch64",level:3},{value:"Running on the Renesas Board",id:"running-on-the-renesas-board",level:3},{value:"Building with a Makefile",id:"building-with-a-makefile",level:3},{value:"Direct Compilation with g++",id:"direct-compilation-with-g",level:3},{value:"OpenCV Python Example",id:"opencv-python-example",level:3},{value:"Using Matplotlib to Display Image",id:"using-matplotlib-to-display-image",level:3}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"6-2-cross-compilation-of-opencv",children:"6-2 Cross Compilation of OpenCV"})}),"\n",(0,s.jsx)(n.p,{children:"This document outlines the steps to cross-compile OpenCV applications for ARM-based Renesas platforms using a Yocto SDK, including both C++ and Python implementations."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"environment-setup-for-renesas-cross-compilation",children:"Environment Setup for Renesas Cross Compilation"}),"\n",(0,s.jsx)(n.p,{children:"To begin, follow the instructions in Section 3-3 to build and install the SDK. By default, the SDK is installed at:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/opt/poky/3.1.31\n"})}),"\n",(0,s.jsx)(n.p,{children:"To enable the cross-compilation environment, execute the following commands:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /opt/poky/3.1.31\r\nunset LD_LIBRARY_PATH\r\n. environment-setup-aarch64-poky-linux\n"})}),"\n",(0,s.jsx)(n.p,{children:"To verify the setup, run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo $CXX\n"})}),"\n",(0,s.jsx)(n.p,{children:"You should see an output like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"aarch64-poky-linux-g++ -mtune=cortex-a55 -fstack-protector-strong -D_FORTIFY_SOURCE=2 ...\n"})}),"\n",(0,s.jsx)(n.h2,{id:"cross-compiling-opencv-for-arm-based-linux-systems",children:"Cross-Compiling OpenCV for ARM-Based Linux Systems"}),"\n",(0,s.jsx)(n.p,{children:"Refer to the following official OpenCV documentation:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://docs.opencv.org/4.6.0/d0/d76/tutorial_arm_crosscompile_with_cmake.html",children:"OpenCV ARM Cross-Compilation Guide"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://jensd.be/1126/linux/cross-compiling-for-arm-or-aarch64-on-debian-or-ubuntu",children:"Jensd\u2019s Cross-Compiling Tutorial"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"opencv-c-example-program-and-cmake-build",children:"OpenCV C++ Example Program and CMake Build"}),"\n",(0,s.jsxs)(n.h3,{id:"example-program-displayimagecpp",children:["Example Program: ",(0,s.jsx)(n.code,{children:"DisplayImage.cpp"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'#include <stdio.h>\r\n#include <opencv2/opencv.hpp>\r\n\r\nusing namespace cv;\r\n\r\nint main(int argc, char* argv[]) {\r\n  if (argc != 2) {\r\n    printf("usage: DisplayImage.out <Image_Path>\\n");\r\n    return -1;\r\n  }\r\n\r\n  Mat image = imread(argv[1], 1);\r\n\r\n  if (!image.data) {\r\n    printf("No image data\\n");\r\n    return -1;\r\n  }\r\n\r\n  namedWindow("Display Image", WINDOW_AUTOSIZE);\r\n  imshow("Display Image", image);\r\n  waitKey(0);\r\n\r\n  return 0;\r\n}\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"cmake-configuration-cmakeliststxt",children:["CMake Configuration: ",(0,s.jsx)(n.code,{children:"CMakeLists.txt"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmake",children:"cmake_minimum_required(VERSION 2.8)\r\nproject(DisplayImage)\r\n\r\nfind_package(OpenCV REQUIRED)\r\nadd_executable(DisplayImage DisplayImage.cpp)\r\ntarget_link_libraries(DisplayImage ${OpenCV_LIBS})\n"})}),"\n",(0,s.jsx)(n.h3,{id:"sample-image",children:"Sample Image"}),"\n",(0,s.jsxs)(n.p,{children:["Download ",(0,s.jsx)(n.code,{children:"Lenna.jpg"})," from:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Lenna",children:"Lenna - Wikipedia"})}),"\n",(0,s.jsx)(n.h3,{id:"building-and-verifying-locally-x86_64",children:"Building and Verifying Locally (x86_64)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir build\r\ncd build\r\ncmake ..\r\nmake\r\nfile ./DisplayImage\n"})}),"\n",(0,s.jsx)(n.p,{children:"Expected output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"DisplayImage: ELF 64-bit LSB pie executable, x86-64 ...\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run the program:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./DisplayImage ../lena.jpg\n"})}),"\n",(0,s.jsx)(n.h3,{id:"cross-compiling-for-aarch64",children:"Cross-Compiling for aarch64"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 1: Set Cross-Compilation Environment"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /opt/poky/3.1.31\r\nunset LD_LIBRARY_PATH\r\n. environment-setup-aarch64-poky-linux\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 2: Clean and Rebuild"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /path/to/OpenCV/HelloWorld\r\nrm -r build\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Step 3: Verify Architecture"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"file ./DisplayImage\n"})}),"\n",(0,s.jsx)(n.p,{children:"Expected output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"DisplayImage: ELF 64-bit LSB pie executable, ARM aarch64 ...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"running-on-the-renesas-board",children:"Running on the Renesas Board"}),"\n",(0,s.jsxs)(n.p,{children:["Transfer the DisplayImage binary to the Renesas board using the ",(0,s.jsx)(n.code,{children:"scp"})," command and run it with:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./DisplayImage lena.jpg\n"})}),"\n",(0,s.jsx)(n.h3,{id:"building-with-a-makefile",children:"Building with a Makefile"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Sample Makefile (System Installed OpenCV)"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-make",children:"CPP = g++\r\nCPPFLAGS = -L/usr/lib/x86_64-linux-gnu \\\r\n           -lopencv_core -lopencv_highgui \\\r\n           -lopencv_imgproc -lopencv_imgcodecs -lOpenCL \\\r\n           -I/usr/include/opencv4\r\n\r\nall: DisplayImage\r\n\r\nDisplayImage: DisplayImage.cpp\r\n\t$(CPP) $^ -o $@ $(CPPFLAGS)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Sample Makefile (Source-Installed OpenCV)"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-make",children:"CPP = g++\r\nCPPFLAGS = -L/usr/local/lib \\\r\n           -lopencv_core -lopencv_highgui \\\r\n           -lopencv_imgproc -lopencv_imgcodecs -lOpenCL \\\r\n           -I/usr/local/include/opencv4\r\n\r\nall: DisplayImage\r\n\r\nDisplayImage: DisplayImage.cpp\r\n\t$(CPP) $^ -o $@ $(CPPFLAGS)\n"})}),"\n",(0,s.jsx)(n.p,{children:"To build:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make\n"})}),"\n",(0,s.jsx)(n.h3,{id:"direct-compilation-with-g",children:"Direct Compilation with g++"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Without ",(0,s.jsx)(n.code,{children:"pkg-config"}),":"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"g++ -o DisplayImage DisplayImage.cpp \\\r\n-I/usr/local/include/opencv4 \\\r\n-L/usr/local/lib \\\r\n-lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_imgcodecs\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["With ",(0,s.jsx)(n.code,{children:"pkg-config"}),":"]}),"\r\nCheck if ",(0,s.jsx)(n.code,{children:"opencv4.pc"})," exists:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pkg-config --cflags opencv4\n"})}),"\n",(0,s.jsx)(n.p,{children:"Compile:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"g++ -o DisplayImage DisplayImage.cpp `pkg-config --cflags opencv4` `pkg-config --libs opencv4`\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"For Cross-Compilation with Yocto SDK:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$CXX -o DisplayImage DisplayImage.cpp `pkg-config --cflags opencv4` `pkg-config --libs opencv4`\n"})}),"\n",(0,s.jsx)(n.h3,{id:"opencv-python-example",children:"OpenCV Python Example"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Python Script: ",(0,s.jsx)(n.code,{children:"DisplayImage.py"})]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import cv2\r\nimport sys\r\n\r\nif len(sys.argv) != 2:\r\n    print("usage:", sys.argv[0], "<Image_Path>")\r\n    sys.exit(-1)\r\n\r\nimg = cv2.imread(sys.argv[1], cv2.IMREAD_COLOR)\r\ncv2.namedWindow("Display Image", cv2.WINDOW_AUTOSIZE)\r\ncv2.imshow("Display Image", img)\r\ncv2.waitKey(0)\n'})}),"\n",(0,s.jsx)(n.p,{children:"Run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python3 DisplayImage.py lena.jpg\n"})}),"\n",(0,s.jsx)(n.h3,{id:"using-matplotlib-to-display-image",children:"Using Matplotlib to Display Image"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import cv2\r\nimport sys\r\nfrom matplotlib import pyplot as plt\r\n\r\nif len(sys.argv) != 2:\r\n    print("usage:", sys.argv[0], "<Image_Path>")\r\n    sys.exit(-1)\r\n\r\nimg = cv2.imread(sys.argv[1], cv2.IMREAD_COLOR)\r\nplt.axis("off")\r\nplt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\r\nplt.show()\n'})}),"\n",(0,s.jsx)(n.p,{children:"Install Matplotlib:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install matplotlib\n"})}),"\n",(0,s.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var a=i(6540);const s={},r=a.createContext(s);function l(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);