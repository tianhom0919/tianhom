"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[9546],{2220:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"my-tutorials/mcut-tutorials/week-5/5-1","title":"5-1 Introduction to QML and Qt Quick","description":"QML (Qt Modeling Language) is a user interface markup language used for designing UI-focused applications. It is declarative, similar to CSS and JSON, making it easy to create dynamic user interfaces.","source":"@site/docs/my-tutorials/mcut-tutorials/week-5/5-1.md","sourceDirName":"my-tutorials/mcut-tutorials/week-5","slug":"/my-tutorials/mcut-tutorials/week-5/5-1","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-5/5-1","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-tutorials/mcut-tutorials/week-5/5-1.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Week 5: UI Design Using QML","permalink":"/tianhom/docs/category/week-5-ui-design-using-qml"},"next":{"title":"Other Tutorials","permalink":"/tianhom/docs/category/other-tutorials"}}');var r=i(4848),a=i(8453);const s={sidebar_position:1},o="5-1 Introduction to QML and Qt Quick",l={},c=[{value:"Qt Quick",id:"qt-quick",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Developing QML Applications",id:"developing-qml-applications",level:2},{value:"Launching Qt Creator",id:"launching-qt-creator",level:2},{value:"Learning Through Examples",id:"learning-through-examples",level:2},{value:"Cross-Compiling a Qt Project Using <code>qmake</code>",id:"cross-compiling-a-qt-project-using-qmake",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"5-1-introduction-to-qml-and-qt-quick",children:"5-1 Introduction to QML and Qt Quick"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"QML (Qt Modeling Language)"})," is a user interface markup language used for designing UI-focused applications. It is declarative, similar to CSS and JSON, making it easy to create dynamic user interfaces."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-qml",children:'import QtQuick\n\nRectangle {\n    id: canvas\n    width: 250\n    height: 200\n    color: "blue"\n\n    Image {\n        id: logo\n        source: "pics/logo.png"\n        anchors.centerIn: parent\n        x: canvas.height / 5\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For more examples, visit:\n",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/QML",children:"QML on Wikipedia"})]}),"\n",(0,r.jsx)(n.h2,{id:"qt-quick",children:"Qt Quick"}),"\n",(0,r.jsx)(n.p,{children:"Qt Quick is an open-source application framework developed and maintained by the Qt Project. It is part of the Qt framework and enables the creation of highly dynamic graphical user interfaces with smooth transitions and effects, which are especially common in mobile applications."}),"\n",(0,r.jsx)(n.p,{children:"Qt Quick includes a declarative scripting language called QML, which is interpreted at runtime by Qt Declarative. This interpreter reads the QML-based UI definitions and renders them accordingly. Additionally, QML allows JavaScript integration for implementing application logic."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.p,{children:["Before proceeding, ensure that you have followed the setup instructions in Sections ",(0,r.jsx)(n.strong,{children:"4-1"})," to ",(0,r.jsx)(n.strong,{children:"4-4"})," to prepare your development environment for Qt cross-compilation."]}),"\n",(0,r.jsxs)(n.p,{children:["By default, the Renesas SDK is installed at ",(0,r.jsx)(n.code,{children:"/opt/poky/{version}"}),". Multiple SDKs can be maintained in separate directories. For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"/opt/poky/3.1.31\n/opt/poky/3.1.31_v2h\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The folder ",(0,r.jsx)(n.code,{children:"3.1.31"})," is for RZ/G2L."]}),"\n",(0,r.jsxs)(n.p,{children:["The folder ",(0,r.jsx)(n.code,{children:"3.1.31_v2h"})," is for RZ/V2H."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"developing-qml-applications",children:"Developing QML Applications"}),"\n",(0,r.jsx)(n.p,{children:"In this chapter, we will learn how to create QML applications. Most of the time, we will compile and run the application using Desktop GCC (64-bit)."}),"\n",(0,r.jsx)(n.p,{children:"Later, we will modify the target SDK kit settings to build versions for RZ/G2L or RZ/V2H."}),"\n",(0,r.jsx)(n.h2,{id:"launching-qt-creator",children:"Launching Qt Creator"}),"\n",(0,r.jsx)(n.p,{children:"The launch Qt Creator, enter the following command in your terminal:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"cd /opt/poky/3.1.31\nunset LD_LIBRARY_PATH\n. environment-setup-aarch64-poky-linux\ncd ~/Qt5.6.3/Tools/QtCreator/bin\n./qtcreator\n"})}),"\n",(0,r.jsx)(n.p,{children:"Once inside Qt Creator, three different kit settings will be available for selection."}),"\n",(0,r.jsx)(n.h2,{id:"learning-through-examples",children:"Learning Through Examples"}),"\n",(0,r.jsx)(n.p,{children:"A great way to learn QML is by exploring the built-in examples available in Qt Creator."}),"\n",(0,r.jsxs)(n.p,{children:["Click on ",(0,r.jsx)(n.strong,{children:"Welcome"})," in the left panel, then the ",(0,r.jsx)(n.strong,{children:"Examples"})," section."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(3731).A+"",children:"examples"})}),"\n",(0,r.jsx)(n.p,{children:'To find QML-related examples, search for "Quick" or "QML".'}),"\n",(0,r.jsxs)(n.h2,{id:"cross-compiling-a-qt-project-using-qmake",children:["Cross-Compiling a Qt Project Using ",(0,r.jsx)(n.code,{children:"qmake"})]}),"\n",(0,r.jsx)(n.p,{children:"Set the SDK environment variables as described above."}),"\n",(0,r.jsx)(n.p,{children:'Navigate to your project directory, e.g., the "analogclock" project folder.'}),"\n",(0,r.jsx)(n.p,{children:"Run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"qmake analogclock.pro\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will generate a Makefile."}),"\n",(0,r.jsx)(n.p,{children:"Compile the project by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"make\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will compile and link the project, generating an executable."}),"\n",(0,r.jsx)(n.p,{children:"Verify the output format by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"file ./analogclock\n"})}),"\n",(0,r.jsx)(n.p,{children:"Expected output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python-repl",children:"... ARM aarch64 ...\n"})}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},3731:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/files/4-1-0-a070ed98389417c54b5f9016eb337a66.jpg"},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(6540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);