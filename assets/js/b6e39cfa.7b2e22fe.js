"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[5352],{4418:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"my-tutorials/week-3/3-3","title":"3-3 Developing GStreamer Plugins","description":"GStreamer plugins are modular components that extend the functionality of the GStreamer multimedia framework by providing specific capabilities like data sources, filters, encoders, decoders, and sinks. Each plugin contains one or more elements that perform a particular task, such as reading from a file, decoding video, applying effects, or streaming media over a network. Plugins are categorized into groups like base, good, bad, and ugly based on their quality, licensing, and stability. They allow developers to create complex media pipelines by combining elements dynamically, making GStreamer highly flexible and extensible for diverse multimedia applications.","source":"@site/docs/my-tutorials/week-3/3-3.md","sourceDirName":"my-tutorials/week-3","slug":"/my-tutorials/week-3/3-3","permalink":"/tianhom/docs/my-tutorials/week-3/3-3","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-tutorials/week-3/3-3.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"3-2 Generating Remap Mapping Files","permalink":"/tianhom/docs/my-tutorials/week-3/3-2"},"next":{"title":"3-4 Preparing GStreamer Plugins for Yocto Compilation","permalink":"/tianhom/docs/my-tutorials/week-3/3-4"}}');var s=i(4848),r=i(8453);const a={sidebar_position:3},l="3-3 Developing GStreamer Plugins",o={},d=[{value:"Installing GStreamer",id:"installing-gstreamer",level:2},{value:"Set Up Development Environment Using <code>gst-plugins-bad-dev</code>",id:"set-up-development-environment-using-gst-plugins-bad-dev",level:2},{value:"Installing Meson",id:"installing-meson",level:2},{value:"Testing With Various Sources",id:"testing-with-various-sources",level:2},{value:"Test Source",id:"test-source",level:3},{value:"MP4 File",id:"mp4-file",level:3},{value:"Network Streaming",id:"network-streaming",level:3},{value:"USB Camera",id:"usb-camera",level:3},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"3-3-developing-gstreamer-plugins",children:"3-3 Developing GStreamer Plugins"})}),"\n",(0,s.jsxs)(n.p,{children:["GStreamer plugins are modular components that extend the functionality of the GStreamer multimedia framework by providing specific capabilities like data sources, filters, encoders, decoders, and sinks. Each plugin contains one or more elements that perform a particular task, such as reading from a file, decoding video, applying effects, or streaming media over a network. Plugins are categorized into groups like ",(0,s.jsx)(n.em,{children:"base, good, bad,"})," and ",(0,s.jsx)(n.em,{children:"ugly"})," based on their quality, licensing, and stability. They allow developers to create complex media pipelines by combining elements dynamically, making GStreamer highly flexible and extensible for diverse multimedia applications."]}),"\n",(0,s.jsx)(n.p,{children:"The image below shows how GStreamer elements are linked as a pipeline."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"pipeline",src:i(2711).A+"",width:"1000",height:"350"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"installing-gstreamer",children:"Installing GStreamer"}),"\n",(0,s.jsx)(n.p,{children:"To install GStreamer on Ubuntu 22.04, use the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio\n"})}),"\n",(0,s.jsx)(n.p,{children:"Try out this Hello World tutorial below by creating a program named 'basic-tutorial-1.c`."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",metastring:'title="basic-tutorial-1.c"',children:'#include <gst/gst.h>\n\n#ifdef __APPLE__\n#include <TargetConditionals.h>\n#endif\n\nint\ntutorial_main (int argc, char *argv[])\n{\n  GstElement *pipeline;\n  GstBus *bus;\n  GstMessage *msg;\n\n  /* Initialize GStreamer */\n  gst_init (&argc, &argv);\n\n  /* Build the pipeline */\n  pipeline =\n      gst_parse_launch\n      ("playbin uri=https://gstreamer.freedesktop.org/data/media/sintel_trailer-480p.webm",\n      NULL);\n\n  /* Start playing */\n  gst_element_set_state (pipeline, GST_STATE_PLAYING);\n\n  /* Wait until error or EOS */\n  bus = gst_element_get_bus (pipeline);\n  msg =\n      gst_bus_timed_pop_filtered (bus, GST_CLOCK_TIME_NONE,\n      GST_MESSAGE_ERROR | GST_MESSAGE_EOS);\n\n  /* See next tutorial for proper error message handling/parsing */\n  if (GST_MESSAGE_TYPE (msg) == GST_MESSAGE_ERROR) {\n    g_printerr ("An error occurred! Re-run with the GST_DEBUG=*:WARN "\n        "environment variable set for more details.\\n");\n  }\n\n  /* Free resources */\n  gst_message_unref (msg);\n  gst_object_unref (bus);\n  gst_element_set_state (pipeline, GST_STATE_NULL);\n  gst_object_unref (pipeline);\n  return 0;\n}\n\nint\nmain (int argc, char *argv[])\n{\n#if defined(__APPLE__) && TARGET_OS_MAC && !TARGET_OS_IPHONE\n  return gst_macos_main ((GstMainFunc) tutorial_main, argc, argv, NULL);\n#else\n  return tutorial_main (argc, argv);\n#endif\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Compile it by using the command below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gcc basic-tutorial-1.c -o basic-tutorial-1 `pkg-config --cflags --libs gstreamer-1.0`\n"})}),"\n",(0,s.jsx)(n.p,{children:"If everything is built correctly, you may run the executable. You should see a window pop up, containing a video being played straight from the Internet, along with audio."}),"\n",(0,s.jsxs)(n.admonition,{title:"Try out these commands!",type:"tip",children:[(0,s.jsx)(n.p,{children:"Examples:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-inspect-1.0 geometrictransform\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-inspect-1.0 circle\n"})}),(0,s.jsx)(n.p,{children:"The commands above will show information such as the source module, plugin and element."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc pattern=0 ! autovideosink\n"})}),(0,s.jsxs)(n.p,{children:["Different patterns can be generated by adjusting the ",(0,s.jsx)(n.code,{children:"pattern"})," parameter from 0 to 25."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! videoconvert ! circle ! videoconvert ! autovideosink \n"})}),(0,s.jsx)(n.p,{children:"Feel free to play around by adding more parameters and observe the output!"})]}),"\n",(0,s.jsxs)(n.h2,{id:"set-up-development-environment-using-gst-plugins-bad-dev",children:["Set Up Development Environment Using ",(0,s.jsx)(n.code,{children:"gst-plugins-bad-dev"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"gst-plugins-bad-dev"}),' package is part of the GStreamer multimedia framework and provides the development files needed for working with the "bad" set of plugins in GStreamer.']}),"\n",(0,s.jsxs)(n.admonition,{title:"What are GStreamer plugins?",type:"info",children:[(0,s.jsx)(n.p,{children:"GStreamer plugins are modular components that extend the functionality of GStreamer by providing support for various codecs, formats, protocols, and other multimedia capabilities. These plugins are grouped into four categories based on their stability and quality:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Base"}),": Stable, well-maintained, and widely used plugins."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Good"}),": Good-quality plugins that are reliable and free from licensing issues."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Bad"}),": Experimental plugins that are under development or have known issues (may require more testing or refinement)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Ugly"}),": High-quality plugins with licensing or patent concerns."]}),"\n"]})]}),"\n",(0,s.jsx)(n.p,{children:"Download the modified project here by cloning the GitHub repo below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/yourskc/gst-plugins-bad-dev\n"})}),"\n",(0,s.jsxs)(n.p,{children:["which is developed based on the ",(0,s.jsx)(n.a,{href:"https://github.com/GStreamer/gst-plugins-bad",children:"original project"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This modified project includes a new element named ",(0,s.jsx)(n.code,{children:"equirectangular"})," as part of the gst-plugins-bad geometric transform plugin. It contains GStreamer code units, build instructions, and test commands."]}),"\n",(0,s.jsx)(n.h2,{id:"installing-meson",children:"Installing Meson"}),"\n",(0,s.jsx)(n.p,{children:"Install the Meson build system:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install python3 python3-pip python3-setuptools \\\npython3-wheel ninja-build\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Go to the ",(0,s.jsx)(n.code,{children:"~/gst-work/gst-plugins-bad-dev-main"})," directory and start the build:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"meson build\nninja -C build\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Verify the build by checking the creation of the file ",(0,s.jsx)(n.code,{children:"libgstgeometrictransform.so"})," in the directory ",(0,s.jsx)(n.code,{children:"~/gst-work/gst-plugins-bad-dev-main/build/gst/geometrictransform"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Install the library and inspect:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo cp ./build/gst/geometrictransform/libgstgeometrictransform.so /usr/lib/x86_64-linux-gnu/gstreamer-1.0\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-inspect-1.0 equirectangular\n"})}),"\n",(0,s.jsx)(n.p,{children:"The expected output should be:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"inspect",src:i(574).A+"",width:"1280",height:"981"})}),"\n",(0,s.jsx)(n.h2,{id:"testing-with-various-sources",children:"Testing With Various Sources"}),"\n",(0,s.jsx)(n.h3,{id:"test-source",children:"Test Source"}),"\n",(0,s.jsx)(n.p,{children:"Basic test with video test source:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd test_env\ngst-launch-1.0 videotestsrc ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Attention!",type:"warning",children:(0,s.jsxs)(n.p,{children:["Ensure the execution directory contains ",(0,s.jsx)(n.code,{children:"EquimatX"})," and ",(0,s.jsx)(n.code,{children:"EquimatY"})," files."]})}),"\n",(0,s.jsx)(n.h3,{id:"mp4-file",children:"MP4 File"}),"\n",(0,s.jsx)(n.p,{children:"To test with mp4 files, use the example below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'gst-launch-1.0 playbin uri=file:///path/to/video.mp4 video-sink="videoconvert ! equirectangular ! videoconvert ! autovideosink"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Try another example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 filesrc location=endo01.mp4 ! qtdemux ! queue ! avdec_h264 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gst-launch-1.0 playbin"}),": a high-level, automated pipeline setup"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gst-launch-1.0 filesrc"}),": a low-level, fully customized pipeline"]}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"network-streaming",children:"Network Streaming"}),"\n",(0,s.jsx)(n.p,{children:"Now, we will test out network streaming. On the mini PC, run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 -v udpsrc uri=udp://127.0.0.1:5000 ! application/x-rtp, media=video, payload=96, encoding-name=H264 ! rtph264depay ! avdec_h264 ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(n.p,{children:"The mini will wait for an incoming stream. For the source, we will run the command below on the remote terminal in VS Code."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=127.0.0.1 port=5000\n"})}),"\n",(0,s.jsx)(n.p,{children:"The output will be displayed on the mini PC."}),"\n",(0,s.jsx)(n.h3,{id:"usb-camera",children:"USB Camera"}),"\n",(0,s.jsx)(n.p,{children:"First, connect a USB camera to mini PC and replace the source in the command as shown below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 v4l2src device=/dev/video0 ! videoscale ! video/x-raw, width=1920, height=1080 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=localhost port=5000\n"})}),"\n",(0,s.jsx)(n.p,{children:"The camera output will be displayed."}),"\n",(0,s.jsxs)(n.admonition,{title:"Video4Linux",type:"tip",children:[(0,s.jsxs)(n.p,{children:["To install Video4Linux, run ",(0,s.jsx)(n.code,{children:"sudo apt-get install v4l-utils"}),". A few useful commands include:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"v4l2-ctl --list-devices"}),": list all camera devices"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"v4l2-ctl -d /dev/video0 -D"}),": display driver information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"v4l2-ctl -d /dev/video0 --list-formats-ext"}),": display all supported image formats"]}),"\n"]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/installing/index.html?gi-language=c",children:"Installing GStreamer"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/hello-world.html?gi-language=c",children:"Basic Tutorial 1: Hello world!"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/tools/gst-launch.html?gi-language=c",children:(0,s.jsx)(n.code,{children:"gst-launch-1.0"})})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/documentation/tools/gst-inspect.html?gi-language=c#",children:(0,s.jsx)(n.code,{children:"gst-inspect-1.0"})})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},2711:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/3-3-0-16672ac660cfa77ab8835c43489b0b71.png"},574:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/3-3-1-0fbd040414ca9080f9c906ff4f9c581a.png"},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);