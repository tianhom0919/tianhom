"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[4440],{3802:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/2-3-0-c52bc365a295c41cd600cd4d1d1b725c.png"},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var t=n(6540);const i={},l=t.createContext(i);function o(e){const r=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(l.Provider,{value:r},e.children)}},8925:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"my-tutorials/mcut-tutorials/week-2/2-3","title":"2-3 Adding a Simple Program by Editing Yocto Layers and Recipe","description":"In this tutorial, we will add a simple Hello World program into the Yocto Project as part of the Linux image. Then, we will execute the program on our target board Renesas RZ/G2L.","source":"@site/docs/my-tutorials/mcut-tutorials/week-2/2-3.md","sourceDirName":"my-tutorials/mcut-tutorials/week-2","slug":"/my-tutorials/mcut-tutorials/week-2/2-3","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-2/2-3","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-tutorials/mcut-tutorials/week-2/2-3.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"2-2 Setting Up Docker Container to Build Linux BSP for RZ/G2L","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-2/2-2"},"next":{"title":"Week 3: GStreamer","permalink":"/tianhom/docs/category/week-3-gstreamer"}}');var i=n(4848),l=n(8453);const o={sidebar_position:3},a="2-3 Adding a Simple Program by Editing Yocto Layers and Recipe",s={},d=[{value:"Step 1: Create a New Layer",id:"step-1-create-a-new-layer",level:2},{value:"Step 2: Add Your Own Program",id:"step-2-add-your-own-program",level:2},{value:"Step 3: Edit <code>bblayers.conf</code> and <code>local.conf</code> Files",id:"step-3-edit-bblayersconf-and-localconf-files",level:2},{value:"Step 4: Rebuild Image",id:"step-4-rebuild-image",level:2},{value:"Step 5: Testing the Program",id:"step-5-testing-the-program",level:2},{value:"References",id:"references",level:2}];function c(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"2-3-adding-a-simple-program-by-editing-yocto-layers-and-recipe",children:"2-3 Adding a Simple Program by Editing Yocto Layers and Recipe"})}),"\n",(0,i.jsx)(r.p,{children:"In this tutorial, we will add a simple Hello World program into the Yocto Project as part of the Linux image. Then, we will execute the program on our target board Renesas RZ/G2L."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"step-1-create-a-new-layer",children:"Step 1: Create a New Layer"}),"\n",(0,i.jsxs)(r.p,{children:["In the directory ",(0,i.jsx)(r.code,{children:"workspaces/rzg/yocto"}),", create a new layer named ",(0,i.jsx)(r.code,{children:"meta-test"})," by running:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"bitbake-layers create-layer meta-test\n"})}),"\n",(0,i.jsxs)(r.p,{children:["A folder named ",(0,i.jsx)(r.code,{children:"meta-test"})," will be created. The structure of the folder are as follows:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:".\r\n\u251c\u2500\u2500 conf\r\n\u2502   \u2514\u2500\u2500 layer.conf\r\n\u251c\u2500\u2500 COPYING.MIT\r\n\u251c\u2500\u2500 README\r\n\u2514\u2500\u2500 recipes-example\r\n    \u2514\u2500\u2500 example\r\n        \u2514\u2500\u2500 example_0.1.bb\r\n\n"})}),"\n",(0,i.jsx)(r.h2,{id:"step-2-add-your-own-program",children:"Step 2: Add Your Own Program"}),"\n",(0,i.jsxs)(r.p,{children:["To add your own program, create a folder named according to your preference in ",(0,i.jsx)(r.code,{children:"~/meta-test/recipes-example"}),". In this case, we will name our folder ",(0,i.jsx)(r.code,{children:"hello"})," and add a simple Hello World program."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"hello\r\n\u251c\u2500\u2500 files\r\n\u2502   \u2514\u2500\u2500 hello.c\r\n\u2514\u2500\u2500 hello.bb\n"})}),"\n",(0,i.jsxs)(r.p,{children:["In the ",(0,i.jsx)(r.code,{children:"hello"})," folder, create these files according to the file structure above."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-c",metastring:'title="hello.c"',children:'# include <stdio.h>\r\n\r\nint main(void) {\r\n   printf("Hello, World!\\n");\r\n   return 0;\r\n}\n'})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bb",metastring:'title="hello.bb"',children:'DESCRIPTION = "Simple Hello World application"\r\n\r\nLICENSE = "MIT"\r\n\r\nLIC_FILES_CHKSUM = "file://${COREBASE}/meta/COPYING.MIT;md5=3da9cfbcb788c80a0384361b4de20420"\r\n\r\nSRC_URI = "file://hello.c"\r\n\r\nS = "${WORKDIR}/build"\r\n\r\ndo_compile() {\r\n    ${CC} ${CFLAGS} ${LDFLAGS} ${WORKDIR}/hello.c -o ${S}/hello\r\n}\r\n\r\ndo_install() {\r\n    install -d ${D}${bindir}\r\n    install -m 0755 ${S}/hello ${D}${bindir}/\r\n}\n'})}),"\n",(0,i.jsxs)(r.h2,{id:"step-3-edit-bblayersconf-and-localconf-files",children:["Step 3: Edit ",(0,i.jsx)(r.code,{children:"bblayers.conf"})," and ",(0,i.jsx)(r.code,{children:"local.conf"})," Files"]}),"\n",(0,i.jsxs)(r.p,{children:["Add the ",(0,i.jsx)(r.code,{children:"meta-test"})," folder under ",(0,i.jsx)(r.code,{children:"BBLAYERS ?="}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-conf",metastring:'title="bblayers.conf"',children:'BBLAYERS ?= " \\\r\n  ${TOPDIR}/../meta-gplv2 \\\r\n  ...\r\n  ${TOPDIR}/../meta-test \\\r\n  ...\n'})}),"\n",(0,i.jsxs)(r.p,{children:["Next, add the name of the recipe to ",(0,i.jsx)(r.code,{children:"local.conf"})," by adding the line below:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-conf",metastring:'title="local.conf"',children:'IMAGE_INSTALL:append = " hello "\n'})}),"\n",(0,i.jsx)(r.h2,{id:"step-4-rebuild-image",children:"Step 4: Rebuild Image"}),"\n",(0,i.jsx)(r.p,{children:"Now, we can rebuild the image with our own program added to the build."}),"\n",(0,i.jsxs)(r.p,{children:["First, initialize the build in the ",(0,i.jsx)(r.code,{children:"/workspaces/rzg/yocto"})," directory."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"source poky/oe-init-build-env build\n"})}),"\n",(0,i.jsx)(r.p,{children:"Run the following command to start building the image."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"MACHINE=smarc-rzg2l bitbake core-image-qt\n"})}),"\n",(0,i.jsx)(r.admonition,{type:"tip",children:(0,i.jsx)(r.p,{children:"If you have previously built the qt image, the process usually only takes a few minutes to finish. This is because the cached files are reused and only our program needs to be compiled from scratch."})}),"\n",(0,i.jsx)(r.h2,{id:"step-5-testing-the-program",children:"Step 5: Testing the Program"}),"\n",(0,i.jsxs)(r.p,{children:["In your serial monitor, type in the name of the program and hit ",(0,i.jsx)(r.code,{children:"Enter"}),"."]}),"\n",(0,i.jsx)(r.admonition,{type:"note",children:(0,i.jsx)(r.p,{children:"Follow the previous guide to learn how to flash an image to SD card and boot up from it."})}),"\n",(0,i.jsx)(r.p,{children:"Your program will be executed and these are the results:"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"hello",src:n(3802).A+"",width:"1282",height:"962"})}),"\n",(0,i.jsx)(r.p,{children:"You may also try out different programs, such as a simple calculator:"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"hawk",src:n(9011).A+"",width:"1282",height:"962"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://www.wpgdadatong.com/blog/detail/42091",children:"How to Build a Hello World Recipe"})}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://www.youtube.com/watch?v=YSITCPhk_qU",children:"Yocto Tutorial - 08 Creating a Simple Hello World Yocto Recipe"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},9011:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/2-3-1-6750fae755c2759e5f66efe9c2ac79d0.png"}}]);