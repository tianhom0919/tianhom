"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[514],{3373:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"my-tutorials/week-3/3-6","title":"3-6 Perform Streaming Tests on RZ/G2L","description":"In this tutorial, we will perform streaming tests on RZ/G2L with hardware-specific encoder/decoder adjustments. Then we will try to stream videos from RZ/G2L to PC using GStreamer commands.","source":"@site/docs/my-tutorials/week-3/3-6.md","sourceDirName":"my-tutorials/week-3","slug":"/my-tutorials/week-3/3-6","permalink":"/tianhom/docs/my-tutorials/week-3/3-6","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/my-tutorials/week-3/3-6.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"3-5 Editing Recipes and Recompiling Yocto Project","permalink":"/tianhom/docs/my-tutorials/week-3/3-5"},"next":{"title":"Week 4","permalink":"/tianhom/docs/category/week-4"}}');var r=s(4848),i=s(8453);const o={sidebar_position:6},a="3-6 Perform Streaming Tests on RZ/G2L",c={},d=[{value:"Basic Test",id:"basic-test",level:2},{value:"Streaming Test",id:"streaming-test",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"3-6-perform-streaming-tests-on-rzg2l",children:"3-6 Perform Streaming Tests on RZ/G2L"})}),"\n",(0,r.jsx)(t.p,{children:"In this tutorial, we will perform streaming tests on RZ/G2L with hardware-specific encoder/decoder adjustments. Then we will try to stream videos from RZ/G2L to PC using GStreamer commands."}),"\n",(0,r.jsx)(t.h2,{id:"basic-test",children:"Basic Test"}),"\n",(0,r.jsx)(t.p,{children:"First, we can perform a basic test using a video test source. On the terminal of RZ/G2L (or serial monitor), run the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! autovideosink\n"})}),"\n",(0,r.jsx)(t.p,{children:"Then, ensure the equirectangular filter is working properly by running:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,r.jsx)(t.p,{children:"The output should look like below:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"equirect",src:s(8438).A+"",width:"1407",height:"807"})}),"\n",(0,r.jsx)(t.h2,{id:"streaming-test",children:"Streaming Test"}),"\n",(0,r.jsx)(t.p,{children:"Now, we will stream from RZ/G2L to mini PC. On the terminal of Ubuntu 22.04, run the following command to wait for h.264 stream from RZ/G2L:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 udpsrc port=5000 ! application/x-rtp,media=video,clock-rate=90000,encoding-name=H264,payload=96 ! rtph264depay ! avdec_h264 ! autovideosink\n"})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8438:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/3-6-0-7c20ba3490ea2670010bf922027064d0.png"},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(6540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);