"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[478],{9863:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"my-tutorials/week-2/2-1","title":"2-1 Setup Docker Container to Build Linux BSP for RZ/G2L","description":"In this tutorial, we will learn how to setup a Docker container to build a Linux BSP for RZ/G2L. Then, we will write the image into an SD card and boot up RZ/G2L from it.","source":"@site/docs/my-tutorials/week-2/2-1.md","sourceDirName":"my-tutorials/week-2","slug":"/my-tutorials/week-2/2-1","permalink":"/tianhom/docs/my-tutorials/week-2/2-1","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/my-tutorials/week-2/2-1.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Week 2","permalink":"/tianhom/docs/category/week-2"},"next":{"title":"2-2 Yocto Layers and Recipe","permalink":"/tianhom/docs/my-tutorials/week-2/2-2"}}');var t=r(4848),s=r(8453);const i={sidebar_position:1},l="2-1 Setup Docker Container to Build Linux BSP for RZ/G2L",o={},d=[{value:"Step 1: Modify <code>devcontainer.json</code> file",id:"step-1-modify-devcontainerjson-file",level:2},{value:"Step 2: Add Dockerfile and Rebuild Container",id:"step-2-add-dockerfile-and-rebuild-container",level:2},{value:"Step 3: Download Renesas VLP Packages",id:"step-3-download-renesas-vlp-packages",level:2},{value:"Step 4: Extract the Downloaded Packages",id:"step-4-extract-the-downloaded-packages",level:2},{value:"Step 5: Apply Patch Files",id:"step-5-apply-patch-files",level:2},{value:"Step 6: Initialize and Start Image Build",id:"step-6-initialize-and-start-image-build",level:2},{value:"Step 7: Flashing Into SD Card",id:"step-7-flashing-into-sd-card",level:2},{value:"Step 8: Booting Up from SD Card",id:"step-8-booting-up-from-sd-card",level:2},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"2-1-setup-docker-container-to-build-linux-bsp-for-rzg2l",children:"2-1 Setup Docker Container to Build Linux BSP for RZ/G2L"})}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial, we will learn how to setup a Docker container to build a Linux BSP for RZ/G2L. Then, we will write the image into an SD card and boot up RZ/G2L from it."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"step-1-modify-devcontainerjson-file",children:["Step 1: Modify ",(0,t.jsx)(n.code,{children:"devcontainer.json"})," file"]}),"\n",(0,t.jsxs)(n.p,{children:["In your Dev Container, navigate to the ",(0,t.jsx)(n.code,{children:"devcontainer.json"})," file under the ",(0,t.jsx)(n.code,{children:".devcontainer"})," directory. Replace the contents of the file with the code below:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="devcontainer.json"',children:'{\r\n    "build": {\r\n        "context": "..",\r\n        "dockerfile": "Dockerfile.rzg_ubuntu-20.04"\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"step-2-add-dockerfile-and-rebuild-container",children:"Step 2: Add Dockerfile and Rebuild Container"}),"\n",(0,t.jsxs)(n.p,{children:["From ",(0,t.jsx)(n.a,{href:"https://github.com/renesas-rz/docker_setup",children:"here"}),", download the Dockerfile named ",(0,t.jsx)(n.code,{children:"Dockerfile.rzg_ubuntu-20.04"})," as we will be using Ubuntu version 20.04."]}),"\n",(0,t.jsxs)(n.p,{children:["Add the Dockerfile to the ",(0,t.jsx)(n.code,{children:".devcontainer"})," directory as shown below."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"devcon",src:r(9405).A+"",width:"1398",height:"870"})}),"\n",(0,t.jsxs)(n.p,{children:["Press ",(0,t.jsx)(n.code,{children:"Ctrl + Shift + P"})," and enter ",(0,t.jsx)(n.strong,{children:'"Dev Containers: Rebuild Container"'})," in the ",(0,t.jsx)(n.strong,{children:"Command Palette"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"rebuild",src:r(6372).A+"",width:"1398",height:"870"})}),"\n",(0,t.jsx)(n.p,{children:"The rebuild of the container may take a moment to finish. After this, your container will have all the reqiured packages and dependencies installed."}),"\n",(0,t.jsx)(n.h2,{id:"step-3-download-renesas-vlp-packages",children:"Step 3: Download Renesas VLP Packages"}),"\n",(0,t.jsxs)(n.p,{children:["Download the packages here: ",(0,t.jsx)(n.a,{href:"https://www.renesas.com/en/products/microcontrollers-microprocessors/rz-mpus/rzg-linux-platform/rzg-marketplace/verified-linux-package/rzg-verified-linux-package",children:"RZ/G Verified Linux Package [5.10-CIP]"})]}),"\n",(0,t.jsx)(n.p,{children:"These are the packages and patch files that you need to install:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Packages:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://www.renesas.com/en/document/swo/rzg-verified-linux-package-v306-update3rtk0ef0045z0021azj-v306-update3zip?r=1597481",children:"RTK0EF0045Z0021AZJ-v3.0.6-update3.zip"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://www.renesas.com/en/document/swo/rz-mpu-graphics-library-evaluation-version-v122-rzg2l-rzg2lc-and-rzv2l-rtk0ef0045z13001zj-v122xxzip?r=1522761",children:"RTK0EF0045Z13001ZJ-v1.2.2_EN.zip"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://www.renesas.com/en/document/swo/rz-mpu-video-codec-library-evaluation-version-v122-rzg2l-and-rzv2l-rtk0ef0045z15001zj-v122xxzip?r=1535641",children:"RTK0EF0045Z15001ZJ-v1.2.2_EN.zip"})})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Patch Files:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://m11158002.github.io/moil-renesas/assets/files/0001-gstreamer-moil-plugin-91a25cd4d16fc479aefd2aa853466770.patch",children:"0001-gstreamer-moil-plugin.patch"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://m11158002.github.io/moil-renesas/assets/files/0002-fix_qtsmarthome_url-db1d20dcf1b5af60dc7034e78271ddc2.patch",children:"0002-fix_qtsmarthome_url.patch"})})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-4-extract-the-downloaded-packages",children:"Step 4: Extract the Downloaded Packages"}),"\n",(0,t.jsx)(n.p,{children:"Extract .zip files."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"unzip RTK0EF0045Z0021AZJ-v3.0.6-update3.zip\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"unzip RTK0EF0045Z13001ZJ-v1.2.2_EN.zip\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"unzip RTK0EF0045Z15001ZJ-v1.2.2_EN.zip\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create a new directory in your Dev Container and move to the working directory."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir yocto\r\ncd yocto\n"})}),"\n",(0,t.jsx)(n.p,{children:"Extract .tar.gz files."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"tar zxvf ../RTK0EF0045Z0021AZJ-v3.0.6-update3/rzg_vlp_v3.0.6.tar.gz\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"tar zxvf ../RTK0EF0045Z13001ZJ-v1.2.2_EN/meta-rz-features_graphics_v1.2.2.tar.gz\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"tar zxvf ../RTK0EF0045Z15001ZJ-v1.2.2_EN/meta-rz-features_codec_v1.2.2.tar.gz\n"})}),"\n",(0,t.jsx)(n.p,{children:"List out the files in the working directory to verify the package contents."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -1\n"})}),"\n",(0,t.jsx)(n.p,{children:"If the output is as follows, the packages are installed correctly."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"extra\r\nmeta-gplv2\r\nmeta-openembedded\r\nmeta-qt5\r\nmeta-renesas\r\nmeta-rz-features\r\nmeta-virtualization\r\npoky\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-5-apply-patch-files",children:"Step 5: Apply Patch Files"}),"\n",(0,t.jsx)(n.p,{children:"Apply a patch file to update vlp to update3."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"patch -p1 < ../RTK0EF0045Z0021AZJ-v3.0.6-update3/vlpg306-to-vlpg306update3.patch\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Move to the ",(0,t.jsx)(n.code,{children:"meta-renesas"})," directory."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd meta-renesas\n"})}),"\n",(0,t.jsx)(n.p,{children:"Apply patch file extras."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"patch -p1 < ../extra/0001-rz-common-recipes-debian-buster-glibc-update-to-v2.2.patch\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"patch -p1 < ../extra/0001-rz-common-linux-update-linux-kernel-to-the-latest-re.patch\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"patch -p1 < ../extra/0001-rz-common-gst-plugins-bad-Depending-bayer2raw-if-lay.patch\n"})}),"\n",(0,t.jsx)(n.p,{children:"Move back the working directory."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd ..\n"})}),"\n",(0,t.jsx)(n.p,{children:"Apply a patch file to add the GStreamer Moil Plugin."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"patch -p1 < 0001-gstreamer-moil-plugin.patch\n"})}),"\n",(0,t.jsx)(n.p,{children:"Apply a patch file to fix the Qt Smart Home URL."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"patch -p1 < 0002-fix_qtsmarthome_url.patch\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-6-initialize-and-start-image-build",children:"Step 6: Initialize and Start Image Build"}),"\n",(0,t.jsx)(n.p,{children:"Initialize a build using the oe-init-build-env script in Poky and set environment variable TEMPLATECONF to the below path."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"TEMPLATECONF=$PWD/meta-renesas/meta-rzg2l/docs/template/conf/ source poky/oe-init-build-env build\n"})}),"\n",(0,t.jsx)(n.p,{children:"Run the following commands to add necessary layers for AI application to build/conf/bblayers.conf (configration file for layers)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitbake-layers add-layer ../meta-rz-features/meta-rz-graphics\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitbake-layers add-layer ../meta-rz-features/meta-rz-codecs\n"})}),"\n",(0,t.jsx)(n.p,{children:"Run the following command to build the weston image."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"MACHINE=smarc-rzg2l bitbake core-image-weston\n"})}),"\n",(0,t.jsx)(n.p,{children:"Building images for the first time typically takes a few hours to complete. You may disconnect from the Dev Container during this process."}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["To build the qt5 image, run the following command to add the ",(0,t.jsx)(n.code,{children:"meta-qt5"})," layer."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitbake-layers add-layer ../meta-qt5\n"})}),(0,t.jsxs)(n.p,{children:["If you want to add qt5 demonstration to ",(0,t.jsx)(n.code,{children:"core-image-qt"}),", add the following to your ",(0,t.jsx)(n.code,{children:"local.conf"})," file."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'QT_DEMO = "1"\n'})}),(0,t.jsx)(n.p,{children:"Run the following command to build the qt5 image."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"MACHINE=smarc-rzg2l bitbake core-image-qt\n"})})]}),"\n",(0,t.jsx)(n.h2,{id:"step-7-flashing-into-sd-card",children:"Step 7: Flashing Into SD Card"}),"\n",(0,t.jsxs)(n.p,{children:["Exit the Dev Container and reconnect to host. Then, go to the ",(0,t.jsx)(n.code,{children:"build/tmp/deploy/images/smarc-rag2l"})," directory. Under this directory, you will see a list of the output files from the build."]}),"\n",(0,t.jsx)(n.p,{children:"Sample output files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"core-image-qt-smarc-rzg2l.wic.gz\r\ncore-image-qt-smarc-rzg2l.wic.bmap\n"})}),"\n",(0,t.jsx)(n.p,{children:"Insert the SD card into the PC and check the device ID of the SD card by running:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo fdisk -l\n"})}),"\n",(0,t.jsx)(n.p,{children:"Flash the image into SD card:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo bmaptool copy core-image-qt-smarc-rzg2l.wic.gz /dev/sda\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["If the flash is unsuccessful, unmount ",(0,t.jsx)(n.code,{children:"/dev/sda1"})," and ",(0,t.jsx)(n.code,{children:"/dev/sda2"})," by running these commands below and try again."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"umount /dev/sdc1\r\numount /dev/sdc2\n"})})]}),"\n",(0,t.jsx)(n.h2,{id:"step-8-booting-up-from-sd-card",children:"Step 8: Booting Up from SD Card"}),"\n",(0,t.jsx)(n.p,{children:"Insert the SD Card into the RZ/G2L board, connect the power input and serial monitor to your personal PC and boot up by long pressing the red button."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"bootup",src:r(863).A+"",width:"1956",height:"901"})}),"\n",(0,t.jsxs)(n.p,{children:["Open up the serial monitor in VS Code (ensure you have the Serial Monitor Extension installed first), select the port that is connected to the board, ensure you have toggled Terminal Mode and click on ",(0,t.jsx)(n.strong,{children:'"Start Monitoring"'}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Reboot by pressing on the blue button on the board. You will start seeing start-up messages on the serial monitor. Once the start-up is complete, you will be prompted for a login. Simply enter ",(0,t.jsx)(n.code,{children:"root"})," to login."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"login",src:r(1846).A+"",width:"1280",height:"960"})}),"\n",(0,t.jsx)(n.p,{children:"Congratulations! You have successfully booted up the RZ/G2L board. On the next tutorial, we will learn how to add programs to the build and execute the program from the board."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.renesas.com/en/document/gde/smarc-evk-rzg2l-rzg2lc-rzg2ul-linux-start-guide-rev104?r=1467981",children:"Linux Start-up Guide"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/renesas-rz/docker_setup",children:"Docker Container setup for building a Linux BSP for RZ"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.renesas.com/us/en/document/qsg/rzg2l-evaluation-board-kit-quick-start-guide",children:"RZ/G2L Quick Start Guide"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},9405:(e,n,r)=>{r.d(n,{A:()=>a});const a=r.p+"assets/images/2-1-0-193edd9dbb120341af8f678131f33a14.png"},6372:(e,n,r)=>{r.d(n,{A:()=>a});const a=r.p+"assets/images/2-1-1-ae04f1b858301a2fdafe7a291247e4b7.png"},863:(e,n,r)=>{r.d(n,{A:()=>a});const a=r.p+"assets/images/2-1-2-54629fbb7a96535aa7bf8cd86164aeb1.png"},1846:(e,n,r)=>{r.d(n,{A:()=>a});const a=r.p+"assets/images/2-1-3-914f5d86671b07f38a7e2411972fe08b.png"},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var a=r(6540);const t={},s=a.createContext(t);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);