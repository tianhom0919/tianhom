"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[3762],{2955:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"my-docs/reads/reads_placeholder","title":"Placeholder","description":"What is a Placeholder?","source":"@site/docs/my-docs/reads/reads_placeholder.md","sourceDirName":"my-docs/reads","slug":"/my-docs/reads/reads_placeholder","permalink":"/tianhom/docs/my-docs/reads/reads_placeholder","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-docs/reads/reads_placeholder.md","tags":[],"version":"current","sidebarPosition":999,"frontMatter":{"sidebar_position":999},"sidebar":"mydocsSidebar","previous":{"title":"Regular Expressions","permalink":"/tianhom/docs/my-docs/reads/reads_5"},"next":{"title":"Misc.","permalink":"/tianhom/docs/category/misc"}}');var o=s(4848),a=s(8453);const n={sidebar_position:999},d="Placeholder",c={},i=[{value:"What is a Placeholder?",id:"what-is-a-placeholder",level:2}];function l(e){const r={h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"placeholder",children:"Placeholder"})}),"\n",(0,o.jsx)(r.h2,{id:"what-is-a-placeholder",children:"What is a Placeholder?"}),"\n",(0,o.jsx)(r.p,{children:"A placeholder is a temporary marker or symbol used to represent something that will be added, substituted, or specified later."}),"\n",(0,o.jsx)(r.hr,{})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>n,x:()=>d});var t=s(6540);const o={},a=t.createContext(o);function n(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);