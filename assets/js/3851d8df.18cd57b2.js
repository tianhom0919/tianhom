"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[4846],{1281:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"my-tutorials/mcut-tutorials/week-6/6-3","title":"6-3 Camera Control Using Video4Linux","description":"This guide provides an overview of how to control cameras using the Video4Linux2 (V4L2) interface. We\u2019ll cover how to list camera devices, view and set supported resolutions and formats, adjust camera parameters, and capture images or videos using various tools like v4l2-ctl, ffmpeg, and OpenCV.","source":"@site/docs/my-tutorials/mcut-tutorials/week-6/6-3.md","sourceDirName":"my-tutorials/mcut-tutorials/week-6","slug":"/my-tutorials/mcut-tutorials/week-6/6-3","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-6/6-3","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-tutorials/mcut-tutorials/week-6/6-3.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"6-2 Cross Compilation of OpenCV","permalink":"/tianhom/docs/my-tutorials/mcut-tutorials/week-6/6-2"},"next":{"title":"Other Tutorials","permalink":"/tianhom/docs/category/other-tutorials"}}');var t=i(4848),a=i(8453);const l={sidebar_position:3},r="6-3 Camera Control Using Video4Linux",o={},d=[{value:"Introduction to <code>v4l2-ctl</code>",id:"introduction-to-v4l2-ctl",level:2},{value:"Installation",id:"installation",level:2},{value:"Listing Video Devices",id:"listing-video-devices",level:2},{value:"Viewing Device Information",id:"viewing-device-information",level:2},{value:"Listing Supported Formats and Resolutions",id:"listing-supported-formats-and-resolutions",level:2},{value:"Setting Camera Resolution and Format",id:"setting-camera-resolution-and-format",level:2},{value:"Checking USB Version (2.0/3.0)",id:"checking-usb-version-2030",level:2},{value:"Capturing an Image",id:"capturing-an-image",level:2},{value:"Listing and Modifying Camera Controls",id:"listing-and-modifying-camera-controls",level:2},{value:"Capturing Media with FFmpeg",id:"capturing-media-with-ffmpeg",level:2},{value:"Using OpenCV to Capture Video",id:"using-opencv-to-capture-video",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"6-3-camera-control-using-video4linux",children:"6-3 Camera Control Using Video4Linux"})}),"\n",(0,t.jsxs)(n.p,{children:["This guide provides an overview of how to control cameras using the ",(0,t.jsx)(n.strong,{children:"Video4Linux2 (V4L2)"})," interface. We\u2019ll cover how to list camera devices, view and set supported resolutions and formats, adjust camera parameters, and capture images or videos using various tools like ",(0,t.jsx)(n.code,{children:"v4l2-ctl"}),", ",(0,t.jsx)(n.code,{children:"ffmpeg"}),", and OpenCV."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"introduction-to-v4l2-ctl",children:["Introduction to ",(0,t.jsx)(n.code,{children:"v4l2-ctl"})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"v4l2-ctl"})," tool is used to interact with Video4Linux devices (video, VBI, radio, or software-defined radio), supporting full control over nearly all device settings using the V4L2 API."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Reference:"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"https://manpages.ubuntu.com/manpages/lunar/man1/v4l2-ctl.1.html",children:"https://manpages.ubuntu.com/manpages/lunar/man1/v4l2-ctl.1.html"})]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"Install the required utilities with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt install v4l-utils\n"})}),"\n",(0,t.jsx)(n.h2,{id:"listing-video-devices",children:"Listing Video Devices"}),"\n",(0,t.jsx)(n.p,{children:"To list all video devices and their corresponding paths:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl --list-devices\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example Output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"S-YUE 8MP USB Camera: S-YUE 8MP (usb-0000:00:14.0-8):\n    /dev/video0\n    /dev/video1\n    /dev/media0\n\nUVC Camera (046d:0990) (usb-0000:00:14.0-7):\n    /dev/video2\n    /dev/video3\n    /dev/media1\n"})}),"\n",(0,t.jsx)(n.h2,{id:"viewing-device-information",children:"Viewing Device Information"}),"\n",(0,t.jsx)(n.p,{children:"Show All Settings:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl --all\n"})}),"\n",(0,t.jsx)(n.p,{children:"Show Driver Information:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl -D\n"})}),"\n",(0,t.jsx)(n.h2,{id:"listing-supported-formats-and-resolutions",children:"Listing Supported Formats and Resolutions"}),"\n",(0,t.jsx)(n.p,{children:"List Basic Formats:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl -d /dev/video0 --list-formats\n"})}),"\n",(0,t.jsx)(n.p,{children:"List Extended Format Info (Resolution & FPS):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl -d /dev/video0 --list-formats-ext\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example Output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"[0]: 'MJPG' (Motion-JPEG, compressed)\n    Size: Discrete 3264x2448 @ 15.000 fps\n    Size: Discrete 1920x1080 @ 30.000 fps\n[1]: 'YUYV' (YUYV 4:2:2)\n    Size: Discrete 640x480 @ 30.000 fps\n"})}),"\n",(0,t.jsx)(n.h2,{id:"setting-camera-resolution-and-format",children:"Setting Camera Resolution and Format"}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl --set-fmt-video=width=1920,height=1080,pixelformat=YUYV\n"})}),"\n",(0,t.jsx)(n.h2,{id:"checking-usb-version-2030",children:"Checking USB Version (2.0/3.0)"}),"\n",(0,t.jsx)(n.p,{children:"For high-resolution video, ensure the camera is connected to a USB 3.0 port:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"lsusb\n"})}),"\n",(0,t.jsx)(n.p,{children:"USB Bus Info Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Bus 002 = USB 3.0  \nBus 001 = USB 2.0\n"})}),"\n",(0,t.jsx)(n.h2,{id:"capturing-an-image",children:"Capturing an Image"}),"\n",(0,t.jsx)(n.p,{children:"Capture a single frame:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl --device /dev/video0 \\\n         --set-fmt-video=width=1600,height=1200,pixelformat=MJPG \\\n         --stream-mmap --stream-to=frame.jpg --stream-count=1\n"})}),"\n",(0,t.jsx)(n.h2,{id:"listing-and-modifying-camera-controls",children:"Listing and Modifying Camera Controls"}),"\n",(0,t.jsx)(n.p,{children:"List Controls:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl --list-ctrls\n"})}),"\n",(0,t.jsx)(n.p,{children:"Detailed Controls with Menus:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl --list-ctrls-menus\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example Controls Output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-arduino",children:"brightness (int)        : min=0 max=255 default=128 value=128\ncontrast (int)          : min=0 max=255 default=32 value=32\nsaturation (int)        : min=0 max=255 default=32 value=32\nwhite_balance_auto (bool): default=1 value=1\ngain (int)              : min=0 max=255 default=0 value=0\npower_line_frequency (menu): options include 50Hz / 60Hz\n"})}),"\n",(0,t.jsx)(n.p,{children:"Change Control Parameter Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl -c brightness=150\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{}),(0,t.jsx)(n.p,{children:"Use a camera preview app like Cheese to observe the changes live."})]}),"\n",(0,t.jsx)(n.h2,{id:"capturing-media-with-ffmpeg",children:"Capturing Media with FFmpeg"}),"\n",(0,t.jsx)(n.p,{children:"Install FFmpeg:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt install ffmpeg\n"})}),"\n",(0,t.jsx)(n.p,{children:"Display live camera feed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ffplay /dev/video0\n"})}),"\n",(0,t.jsx)(n.p,{children:"Capture a picture:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ffmpeg -f v4l2 -video_size 1600x1200 -i /dev/video0 -frames 1 out.jpg\n"})}),"\n",(0,t.jsx)(n.p,{children:"Record a video clip:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ffmpeg -f v4l2 -framerate 30 -video_size 1600x1200 -input_format mjpeg \\\n  -i /dev/video0 -c copy out.mkv\n"})}),"\n",(0,t.jsx)(n.p,{children:"Press q to stop recording."}),"\n",(0,t.jsx)(n.h2,{id:"using-opencv-to-capture-video",children:"Using OpenCV to Capture Video"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{}),(0,t.jsx)(n.p,{children:"For S-YUE Camera on Renesas:"}),(0,t.jsx)(n.p,{children:"Set the pixel format to YUYV, as it defaults to MJPG which may not be compatible."})]}),"\n",(0,t.jsx)(n.p,{children:"OpenCV C++ Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'#include <opencv2/opencv.hpp>\nusing namespace cv;\n\nint main() {\n    VideoCapture cap(0);\n    if (!cap.isOpened()) {\n        std::cout << "Cannot open camera\\n";\n        return -1;\n    }\n\n    cap.set(CAP_PROP_FRAME_WIDTH, 640);\n    cap.set(CAP_PROP_FRAME_HEIGHT, 480);\n\n    Mat frame;\n    while (true) {\n        cap >> frame;\n        imshow("Camera", frame);\n        if (waitKey(10) == 27) break; // ESC to exit\n    }\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:["With ",(0,t.jsx)(n.code,{children:"v4l2-ctl"}),", ",(0,t.jsx)(n.code,{children:"ffmpeg"}),", and OpenCV, we can configure and utilize camera devices on Linux-based systems. Whether you're building embedded systems with Renesas boards or just testing a webcam on Ubuntu, these tools provide extensive flexibility and control."]}),"\n",(0,t.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var s=i(6540);const t={},a=s.createContext(t);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);