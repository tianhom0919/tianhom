"use strict";(self.webpackChunkth_ws=self.webpackChunkth_ws||[]).push([[3318],{5558:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>t,default:()=>o,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"my-docs/reads/reads_5","title":"Regular Expressions","description":"What Are Regular Expressions?","source":"@site/docs/my-docs/reads/reads_5.md","sourceDirName":"my-docs/reads","slug":"/my-docs/reads/reads_5","permalink":"/tianhom/docs/my-docs/reads/reads_5","draft":false,"unlisted":false,"editUrl":"https://github.com/tianhom0919/tianhom/tree/main/th-ws/docs/my-docs/reads/reads_5.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"mydocsSidebar","previous":{"title":"Patch Files","permalink":"/tianhom/docs/my-docs/reads/reads_4"},"next":{"title":"Placeholder","permalink":"/tianhom/docs/my-docs/reads/reads_placeholder"}}');var d=n(4848),c=n(8453);const i={sidebar_position:5},t="Regular Expressions",l={},a=[{value:"What Are Regular Expressions?",id:"what-are-regular-expressions",level:2},{value:"Who Invented Regular Expressions?",id:"who-invented-regular-expressions",level:3},{value:"List of Regex Syntax",id:"list-of-regex-syntax",level:2},{value:"Character Classes",id:"character-classes",level:3},{value:"Anchors",id:"anchors",level:3},{value:"Quantifiers",id:"quantifiers",level:3},{value:"Group and Capturing",id:"group-and-capturing",level:3},{value:"Flags",id:"flags",level:3},{value:"Example",id:"example",level:2},{value:"Explanation",id:"explanation",level:3}];function h(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"regular-expressions",children:"Regular Expressions"})}),"\n",(0,d.jsx)(s.h2,{id:"what-are-regular-expressions",children:"What Are Regular Expressions?"}),"\n",(0,d.jsxs)(s.p,{children:["Regular expressions (commonly abbreviated as ",(0,d.jsx)(s.code,{children:"regex"})," or ",(0,d.jsx)(s.code,{children:"regexp"}),") are sequences of characters that define search patterns. They are like powerful search tools used to match, find, and manipulate text based on specific patterns."]}),"\n",(0,d.jsx)(s.p,{children:"In simpler terms, they allow you to:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Search for specific patterns of text."}),"\n",(0,d.jsx)(s.li,{children:"Extract data from strings."}),"\n",(0,d.jsx)(s.li,{children:"Validate input formats (e.g., email addresses, phone numbers)."}),"\n",(0,d.jsx)(s.li,{children:"Perform search-and-replace operations."}),"\n"]}),"\n",(0,d.jsx)(s.p,{children:"Examples:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["A regex like ",(0,d.jsx)(s.code,{children:"\\d+"})," finds sequences of digits."]}),"\n",(0,d.jsxs)(s.li,{children:["A regex like ",(0,d.jsx)(s.code,{children:"^[a-z]+$"})," checks if a string contains only lowercase letters."]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"who-invented-regular-expressions",children:"Who Invented Regular Expressions?"}),"\n",(0,d.jsx)(s.p,{children:"The concept of regular expressions was developed in the 1950s by American mathematician Stephen Cole Kleene. He introduced regular sets and the Kleene star (*), a mathematical notation used to describe patterns in strings, as part of his work on automata theory and formal language."}),"\n",(0,d.jsx)(s.p,{children:"Ken Thompson, a computer scientist, implemented regular expressions in the 1960s as part of early text-processing tools for Unix systems, making regex practical and accessible in computer science."}),"\n",(0,d.jsx)(s.h2,{id:"list-of-regex-syntax",children:"List of Regex Syntax"}),"\n",(0,d.jsx)(s.h3,{id:"character-classes",children:"Character Classes"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Syntax"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"[abc]"})}),(0,d.jsx)(s.td,{children:"Matches any single character in the set (a, b, or c)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"[^abc]"})}),(0,d.jsx)(s.td,{children:"Matches any single character not in the set."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"[a-z]"})}),(0,d.jsx)(s.td,{children:"Matches any character in the range a to z."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\d"})}),(0,d.jsxs)(s.td,{children:["Matches any digit (equivalent to ",(0,d.jsx)(s.code,{children:"[0-9]"}),")."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\D"})}),(0,d.jsx)(s.td,{children:"Matches any non-digit."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\w"})}),(0,d.jsxs)(s.td,{children:["Matches any word character (letters, digits, or ",(0,d.jsx)(s.code,{children:"_"}),")."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\W"})}),(0,d.jsx)(s.td,{children:"Matches any non-word character."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\s"})}),(0,d.jsx)(s.td,{children:"Matches any whitespace character (spaces, tabs, etc.)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\S"})}),(0,d.jsx)(s.td,{children:"Matches any non-whitespace character."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"anchors",children:"Anchors"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Syntax"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"^"})}),(0,d.jsx)(s.td,{children:"Matches the start of a string."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"$"})}),(0,d.jsx)(s.td,{children:"Matches the end of a string."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\b"})}),(0,d.jsx)(s.td,{children:"Matches a word boundary."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"\\B"})}),(0,d.jsx)(s.td,{children:"Matches a non-word boundary."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"quantifiers",children:"Quantifiers"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Syntax"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"*"})}),(0,d.jsx)(s.td,{children:"Matches 0 or more occurrences of the preceding element."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"+"})}),(0,d.jsx)(s.td,{children:"Matches 1 or more occurrences of the preceding element."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"?"})}),(0,d.jsx)(s.td,{children:"Matches 0 or 1 occurrence of the preceding element (non-greedy)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"{n}"})}),(0,d.jsx)(s.td,{children:"Matches exactly n occurrences of the preceding element."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"{n,}"})}),(0,d.jsx)(s.td,{children:"Matches n or more occurrences of the preceding element."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"{n,m}"})}),(0,d.jsx)(s.td,{children:"Matches between n and m occurrences of the preceding element."})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"group-and-capturing",children:"Group and Capturing"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Syntax"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(abc)"})}),(0,d.jsxs)(s.td,{children:["Matches and captures ",(0,d.jsx)(s.code,{children:"abc"})," as a group."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(?:abc)"})}),(0,d.jsxs)(s.td,{children:["Matches ",(0,d.jsx)(s.code,{children:"abc"})," without capturing it (non-capturing group)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(?=abc)"})}),(0,d.jsxs)(s.td,{children:["Positive lookahead (asserts that ",(0,d.jsx)(s.code,{children:"abc"})," follows without consuming it)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(?!abc)"})}),(0,d.jsxs)(s.td,{children:["Negative lookahead (asserts that ",(0,d.jsx)(s.code,{children:"abc"})," does not follow)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(?<=abc)"})}),(0,d.jsxs)(s.td,{children:["Positive lookbehind (asserts that ",(0,d.jsx)(s.code,{children:"abc"})," precedes)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(?<!abc)"})}),(0,d.jsxs)(s.td,{children:["Negative lookbehind (asserts that ",(0,d.jsx)(s.code,{children:"abc"})," does not precede)."]})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"flags",children:"Flags"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Flag"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"i"})}),(0,d.jsx)(s.td,{children:"Case-insensitive matching."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"g"})}),(0,d.jsx)(s.td,{children:"Global search (matches all occurrences)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"m"})}),(0,d.jsxs)(s.td,{children:["Multiline mode (",(0,d.jsx)(s.code,{children:"^"})," and ",(0,d.jsx)(s.code,{children:"$"})," match the start/end of lines)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"s"})}),(0,d.jsxs)(s.td,{children:["Dotall mode (",(0,d.jsx)(s.code,{children:"."})," matches newlines)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"x"})}),(0,d.jsx)(s.td,{children:"Extended mode (ignores whitespace for readability)."})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Example Regex:"})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-regex",children:"(?<name>[A-Za-z]+)\\s(?<age>\\d{1,3})\\syears\\sold,\\semail:\\s(?i)([a-z\\d._%+-]+@[a-z\\d.-]+\\.[a-z]{2,4})(?-i)\\s\\((?#flags)\\d{3}-\\d{3}-\\d{4}\\)\n"})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.strong,{children:"Sample Input:"})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-plaintext",children:"John 28 years old, email: john.doe123@example.com (123-456-7890)\n"})}),"\n",(0,d.jsx)(s.h3,{id:"explanation",children:"Explanation"}),"\n",(0,d.jsxs)(s.p,{children:["The regex starts by capturing a name using ",(0,d.jsx)(s.code,{children:"[A-Za-z]+"})," in a named group called ",(0,d.jsx)(s.code,{children:"name"}),"."]}),"\n",(0,d.jsxs)(s.p,{children:["It matches a space (",(0,d.jsx)(s.code,{children:"\\s"}),") and then captures an age using ",(0,d.jsx)(s.code,{children:"\\d{1,3}"})," in the ",(0,d.jsx)(s.code,{children:"age"})," group."]}),"\n",(0,d.jsx)(s.p,{children:'It continues with matching the text "years old" exactly as it appears.'}),"\n",(0,d.jsx)(s.p,{children:"Next, it captures an email:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["The ",(0,d.jsx)(s.code,{children:"(?i)"})," flag ensures case-insensitive matching for the email address."]}),"\n",(0,d.jsxs)(s.li,{children:["Matches one or more valid email characters (",(0,d.jsx)(s.code,{children:"[a-z\\d._%+-]+"}),")."]}),"\n",(0,d.jsxs)(s.li,{children:["Matches the ",(0,d.jsx)(s.code,{children:"@"})," symbol, followed by the domain and a top-level domain."]}),"\n",(0,d.jsxs)(s.li,{children:["The ",(0,d.jsx)(s.code,{children:"(?-i)"})," flag turns off case-insensitivity."]}),"\n",(0,d.jsxs)(s.li,{children:["Finally, it captures a phone number in the format ",(0,d.jsx)(s.code,{children:"(123-456-7890)"})," using parentheses and ",(0,d.jsx)(s.code,{children:"\\d{3}-\\d{3}-\\d{4}"}),"."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{})]})}function o(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>t});var r=n(6540);const d={},c=r.createContext(d);function i(e){const s=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(c.Provider,{value:s},e.children)}}}]);